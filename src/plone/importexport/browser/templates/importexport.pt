<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
xmlns:tal="http://xml.zope.org/namespaces/tal"
xmlns:metal="http://xml.zope.org/namespaces/metal"
xmlns:i18n="http://xml.zope.org/namespaces/i18n"
lang="en"
metal:use-macro="context/main_template/macros/master"
i18n:domain="plone">
<head>

</head>
<body>
  <metal:style fill-slot="style_slot">
    <link rel="stylesheet" type="text/css" href="++resource++plone.importexport/import_export.css" />
  </metal:style>

  <metal:js fill-slot="javascript_head_slot">
    <script type="text/javascript" src="++resource++plone.importexport/import_export.js"></script>
  </metal:js>

  <metal:content fill-slot="content-core">

  <div class="pat-autotoc autotabs" data-pat-autotoc="section:fieldset;
    levels:legend;">

    <!-- Basic Tab -->
    <fieldset>
      <legend i18n:translate="">Basic</legend>

      <!-- Basic Export -->
      <section>

        <h2 i18n:translate="">Export</h2>

        <form action="export" method="POST">
          <input type="submit" name="export" value="Export"
            i18n:attributes="value" />
        </form>

      </section>

      <!-- Basic Import -->
      <section>

        <!-- <input class="pat-pickadate" data-pat-pickadate="time:true"/> -->
        <h2 i18n:translate="">Import</h2>

        <form action="imports" enctype="multipart/form-data" method="POST">
           <div class="field">
             <label for="importfile">File</label>
             <div class="formHelp" i18n:translate="import_basic_importfile_help">
               Select a CSV or a ZIP file providing the contents to import.
             </div>
             <input type="file" name="file" multiple="multiple" />
           </div>
           <input type="submit" name="imports" value="Import" i18n:attributes="value" />
        </form>

      </section>

    </fieldset>

    <!-- Advance Tab -->
    <fieldset>
      <legend i18n:translate="">Advanced</legend>

      <div class="pat-autotoc autotabs" data-pat-autotoc="section:subfieldset;
        levels:h1;">

      <!-- Advance Export -->
      <subfieldset>
        <h1 i18n:translate="">Export</h1>

        <form action="export" method="POST">

          <label for="exportFormat"> Custom Export Settings 
          <div class="formHelp">
           Specify fields to export.
           If nothing is selected, all fields will be exported
           (@type, path, id and UID are always exported).
           </div>
          <input type="radio" name="exportFormat" value="combined" checked="checked">
            Combined
          </input>          

          <input type="radio" name="exportFormat" value="csv" >
            CSV only
          </input>

          <input type="radio" name="exportFormat" value="files" >
            Files only
          </input>


          </label>
          <section>

            <div >
              <input type="button" onclick= "selectAll('exportFields')"  value="Select all"
                name="Select"/>
              <input type="button" onclick="deselectAll('exportFields')" value="Deselect all"
                name="Deselect"/>
            </div>

            <table class="listing">
              <thead>
            <tr>
                <th class="sort">
                    Field to export
                </th>
            </tr>
        </thead>
              <tbody>
              <tal:block tal:repeat="val python: view.getExportfields().values()">
                <tal:block tal:define="oddrow repeat/val/odd;">
                <tr tal:attributes="class python:oddrow and 'even' or 'odd'" tal:repeat="index python: range(len(val))">
                  <td>
                  <label tal:attributes="for python:val[index]">
                    <input type="checkbox" name='exportFields' value='null'
                    tal:attributes="value python:val[index]"></input>
                    <tal:block tal:content="python:val[index]"/>
                  </label></td>
                </tr>
              </tal:block>
              </tal:block>
              </tbody>
            </table>

          </section>

          <br>

          <!-- <div id="change"></div>
          <input type = "button" onclick = "Fun()" name = "Select"
             value = "Click Me" /> -->

          <input type="submit" name="export" value="Export"
            i18n:attributes="value" />

        </form>

      </subfieldset>

      <!-- Advanced Import -->
      <subfieldset tal:define="exist python: True">

        <h1 i18n:translate="">Import</h1>

        <div>

          <form action="imports" enctype="multipart/form-data" method="POST">
            <h5>Custom Import Settings</h5>
            <div class="formHelp">
             Use the settings below to customise the import behaviour
             </div>

            <h5>Primary Key<h5>
            <select name="import_key" class="pat-select2" data-pat-select2="width:20em">
              <tal:block tal:repeat="pKey view/available_pKeys">
                <option tal:attributes="value pKey" tal:content="pKey"></option>
              </tal:block>
            </select>

            <h5>Import settings<h5>
            <table class="listing import_export_settings">
              <tr>
                <td>
                  <label for="new_content"><h5>If content is new</h5>
                  <input type="radio" name="new_content" value="add" checked="checked">
                    Add and create folders
                  </input><br />          
        
                  <input type="radio" name="new_content" value="skip" >
                    Skip
                  </input> 
                  </label>
                </td>
                <td>
                  <label for="matching_content"><h5>If site content matches key</h5>
                  <input type="radio" name="matching_content" value="update" checked="checked">
                    Update
                  </input>
                  <br />
                  <input type="radio" name="matching_content" value="ignore">
                    skip
                  </input>          
        
                  </label>
                </td>
                <td>
                  <label for="existing_content_no_match"><h5>If site content does not match key</h5>
                  <input type="radio" name="existing_content_no_match" value="keep" checked="checked">
                    Keep
                  </input>
                  <br />
                  <input type="radio" name="existing_content_no_match" value="remove">
                    Remove
                  </input>
        
                  </label>
                </td>
              </tr>
            </table>

            <!-- File Import mechanism -->
            <div class="field">
              <label for="importfile">File</label>
              <div class="formHelp" i18n:translate="import_basic_importfile_help">
                Select a CSV or a ZIP file providing the contents to import.
              </div>
              <input id="uploadID" type="file" name="file" multiple="multiple" />

            </div>

            <div id="table">
  
  
              <!-- dumb method using tal mechanism, which is not in use anymore-->
              <!--<div >-->
              <!--   <table cellspacing="0" cellpadding="0" border="0'">-->
              <!--    <tr tal:repeat="val python: view.getImportfields().values()">-->
              <!--      <td tal:repeat="index python: range(len(val))">-->
              <!--        <input type="checkbox" name='importFields' value='null'-->
              <!--          tal:attributes="value python: val[index]">-->
              <!--        <p tal:content="text python: val[index]">-->
              <!--          field-->
              <!--        </p>-->
              <!--        </input>-->
              <!--      </td>-->
              <!--    </tr>-->
              <!--  </table>-->
              <!--</div>-->
  
              <!-- this is where create new option will render -->
              <div id="createNew">
              </div>
  
            </div>

          </form>

        </div>

      </subfieldset>

      </div>
    </fieldset>

  </div>

  </metal:content>
</body>
</html>
